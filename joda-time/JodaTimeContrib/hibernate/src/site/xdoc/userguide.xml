<?xml version="1.0" encoding="ISO-8859-1"?>

<document>
 <properties>
  <title>Java date and time API - Hibernate support - User Guide</title>
  <author>Stephen Colebourne</author>
 </properties>
<body>

<!-- ========================================================================= -->

<section name="Introduction">
<p>
Joda-Time Hibernate support provides classes to
persist Joda-Time based date and time objects to a database using Hibernate.
</p>

<!-- ========================================================================= -->

<subsection name="Documentation">
<p>
	It is fairly easy to use this package in your Hibernate environment.
	There are two main options for the configuration - the hibernate mapping file or annotations.
</p>

	<subsection name="Hibernate mapping">
		<p>
		Add the <code>type</code> attribute to your property configuration. e.g.:
		</p>
		<pre><![CDATA[
<property type="org.joda.time.contrib.hibernate.PersistentDateTime" name="dateTime"/>
		]]></pre>
	</subsection>

	<subsection name="Hibernate annotations">
		<p>
		Set the type using the <code>@org.hibernate.annotations.Type</code> annotation. e.g.:
		</p>
		<pre><![CDATA[
@Column
@Type(type="org.joda.time.contrib.hibernate.PersistentDateTime")
private DateTime fromDate;
		]]></pre>
		<p>
		Sometimes there are multiple columns to be specified, as with <code>PersistentDateTimeTZ</code>:
		</p>
		<pre><![CDATA[
@Columns(columns={@Column(name="startTime"),@Column(name="startTimezone")})
@Type(type="org.joda.time.contrib.hibernate.PersistentDateTimeTZ")
private DateTime startDateTime;
		]]></pre>
	</subsection>

	<subsection name="Available Types">
		<p>
			The main types which can be persisted:
		</p>
		<table>
			<tr>
				<th>Class</th>
				<th>SQL Column Type(s)</th>
				<th>Description</th>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentDateTime</td>
				<td>TIMESTAMP</td>
				<td></td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentDateTimeTZ</td>
				<td>TIMESTAMP, VARCHAR</td>
				<td>This persister uses two columns, to separately store the time value and its timezone</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentInstant</td>
				<td>TIMESTAMP</td>
				<td>This persister uses one column to store the timestamp</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentInstantAsBigInt</td>
				<td>BIGINT</td>
				<td>This persister uses one column to store the millisconds</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentInterval</td>
				<td>TIMESTAMP, TIMESTAMP</td>
				<td>This persister uses two columns, to store the start and end of the interval</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentLocalDate</td>
				<td>TIMESTAMP</td>
				<td></td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentLocalTimeAsTime</td>
				<td>TIME</td>
				<td>Depending on your Database you might loose the millisecond part</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentLocalTimeExact</td>
				<td>INTEGER</td>
				<td>The milliseconds are stored as simple integer value, no information loss</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentLocalTimeAsString</td>
				<td>VARCHAR</td>
				<td>Same as above, just uses a human readable representation. ISO8601 format - HH:mm:ss.SSSZ</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentLocalDateTime</td>
				<td>TIMESTAMP</td>
				<td></td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentDuration</td>
				<td>VARCHAR</td>
				<td>The format is PTnS where n is the value</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentPeriod</td>
				<td>VARCHAR</td>
				<td>The format is PnYnMnDTnHnMnS where n is the value</td>
			</tr>
		</table>

	</subsection>

	<subsection name="Outdated Types">
		<p>
			The following types are now effectively deprecated, however persistence is still available:
		</p>
		<table>
			<tr>
				<th>Class</th>
				<th>SQL Column Type(s)</th>
				<th>Description</th>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentTimeOfDay</td>
				<td>TIME</td>
				<td>Depending on your Database you might loose the millisecond part</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentTimeOfDayExact</td>
				<td>INTEGER</td>
				<td>The milliseconds are stored as simple integer value, no information loss</td>
			</tr>
			<tr>
				<td>org.joda.time.contrib.hibernate.PersistentYearMonthDay</td>
				<td>DATE</td>
				<td></td>
			</tr>
		</table>
	</subsection>

</subsection>
</section>

<!-- ========================================================================= -->

</body>
</document>
