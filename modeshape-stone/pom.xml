<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape</artifactId>
    <version>2.4.0.Final-stone-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>ModeShape</name>
    <url>http://www.modeshape.org</url>
    <inceptionYear>2008</inceptionYear>
    <description>
        ModeShape is a JCR repository implementation with support for federation and sequencing.
    </description>
    <scm>
        <connection>scm:svn:https://anonsvn.jboss.org/repos/modeshape/tags/modeshape-2.4.0.Final-stone-SNAPSHOT</connection>
        <developerConnection>scm:svn:https://svn.jboss.org/repos/modeshape/tags/modeshape-2.4.0.Final-stone-SNAPSHOT</developerConnection>
        <url>http://anonsvn.jboss.org/repos/modeshape/tags/modeshape-2.4.0.Final-stone-SNAPSHOT</url>
    </scm>
    <issueManagement>
        <system>jira</system>
        <url>http://jira.jboss.org/jira/browse/MODE</url>
    </issueManagement>
    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
            <!--url>http://www.gnu.org/licenses/lgpl.html</url-->
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
    <organization>
        <name>JBoss, a division of Red Hat</name>
        <url>http://www.jboss.org</url>
    </organization>
    <developers>
        <developer>
            <name>Randall Hauch</name>
            <id>randall</id>
            <email>rhauch@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Project Lead</role>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>John Verhaeg</name>
            <id>johnny</id>
            <email>jverhaeg@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Dan Florian</name>
            <id>dan</id>
            <email>dflorian@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Stefano Maestri</name>
            <id>stefano</id>
            <email>stefano.maestri@javalinux.it</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Serge Pagop</name>
            <id>spagop</id>
            <email>Serge.Pagop@innoq.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Michael Trezzi</name>
            <id>mathwizard</id>
            <email>michael@mathwizard.org</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Alexandre Porcelli</name>
            <id>porcelli</id>
            <email>porcelli@devexp.com.br</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-3</timezone>
        </developer>
        <developer>
            <name>Sergiy Litsenko</name>
            <id>lisbor</id>
            <email>litsenko_sergey@yahoo.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+10</timezone>
        </developer>
        <developer>
            <name>Vijay Kiran</name>
            <id>vijay.duvvuri</id>
            <email>mail@vijaykiran.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Van Halbert</name>
            <id>vhalbert@redhat.com</id>
            <email>vhalbert@redhat.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>Greg Haber</name>
            <organization>JBoss, a division of Red Hat</organization>
            <timezone>-5</timezone>
        </contributor>
    </contributors>
    <modules>
        <module>modeshape-common</module>
        <module>modeshape-graph</module>
        <module>modeshape-repository</module>
        <module>modeshape-cnd</module>
        <module>extensions/modeshape-search-lucene</module>
        <module>extensions/modeshape-clustering</module>
        <module>modeshape-jcr-api</module>
        <module>modeshape-jcr</module>
        <module>extensions/modeshape-classloader-maven</module>
        <module>extensions/modeshape-sequencer-images</module>
        <module>extensions/modeshape-sequencer-mp3</module>
        <module>extensions/modeshape-sequencer-jbpm-jpdl</module>
        <!--module>sandbox/modeshape-sequencer-esb-message</module-->
        <module>extensions/modeshape-sequencer-cnd</module>
        <module>extensions/modeshape-sequencer-java</module>
        <module>extensions/modeshape-sequencer-classfile</module>
        <module>extensions/modeshape-sequencer-msoffice</module>
        <module>extensions/modeshape-sequencer-teiid</module>
        <module>extensions/modeshape-sequencer-text</module>
        <module>extensions/modeshape-sequencer-xml</module>
        <module>extensions/modeshape-sequencer-zip</module>
        <module>extensions/modeshape-sequencer-ddl</module>
        <module>extensions/modeshape-connector-filesystem</module>
        <module>extensions/modeshape-connector-infinispan</module>
        <module>extensions/modeshape-connector-jbosscache</module>
        <module>extensions/modeshape-connector-svn</module>
        <module>extensions/modeshape-connector-jcr</module>
        <module>extensions/modeshape-connector-store-jpa</module>
        <module>extensions/modeshape-connector-jdbc-metadata</module>
<!--
        <module>extensions/modeshape-connector-jackrabbit</module>
-->
        <module>extensions/modeshape-mimetype-detector-aperture</module>
        <module>web</module>
        <module>utils/modeshape-jpa-ddl-gen</module>
        <module>utils/modeshape-jdbc</module>
        <module>deploy/jbossas</module>
    </modules>
    <properties>
        <rootDir>${project.basedir}</rootDir>
        <jcr.repository.vendor>${project.organization.name}</jcr.repository.vendor>
        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--
            These are properties used in the database profiles. Must initialize
            them to be empty so that Maven applies them via filtering to the
            resources. If a project needs files filtered, however, make sure to
            include a 'testResources' fragment in the 'build' section of the
            child project POM to say which files need to be filtered. See the
            "modeshape-integration" or "extensions/modeshape-connector-store-jpa"
            project POMs for examples.
        -->
        <jpaSource.dialect />
        <jpaSource.driverClassName />
        <jpaSource.url />
        <jpaSource.username />
        <jpaSource.password />
        <jpaSource.maximumConnectionsInPool>2</jpaSource.maximumConnectionsInPool>
        <jpaSource.minimumConnectionsInPool>1</jpaSource.minimumConnectionsInPool>
        <jpaSource.numberOfConnectionsToAcquireAsNeeded>1</jpaSource.numberOfConnectionsToAcquireAsNeeded>
        <jpaSource.maximumSizeOfStatementCache>100</jpaSource.maximumSizeOfStatementCache>
        <jpaSource.maximumConnectionIdleTimeInSeconds>10</jpaSource.maximumConnectionIdleTimeInSeconds>
        <jpaSource.referentialIntegrityEnforced>true</jpaSource.referentialIntegrityEnforced>
        <jpaSource.largeValueSizeInBytes>150</jpaSource.largeValueSizeInBytes>
        <jpaSource.autoGenerateSchema>create</jpaSource.autoGenerateSchema>
        <jpaSource.compressData />
        <jpaSource.cacheTimeToLiveInMilliseconds />
        <jpaSource.creatingWorkspacesAllowed />
        <jpaSource.defaultWorkspaceName />
        <jpaSource.predefinedWorkspaceNames />
        <jpaSource.model />
        <jpaSource.referentialIntegrityEnforced>true</jpaSource.referentialIntegrityEnforced>
        <jpaSource.retryLimit>3</jpaSource.retryLimit>
        <jpaSource.rootNodeUuid />
        <jpaSource.showSql>false</jpaSource.showSql>
        <metadata.collectorClassName>org.modeshape.connector.meta.jdbc.JdbcMetadataCollector</metadata.collectorClassName>
        <jgroups.preferIpv4>false</jgroups.preferIpv4>
        <jgroups.preferIpv6>false</jgroups.preferIpv6>
    </properties>

    <profiles>
        <profile>
            <id>preferIpv4</id>
            <activation>
                <property>
                    <name>!preferIpv6</name>
                </property>
            </activation>
            <properties>
                <jgroups.preferIpv4>true</jgroups.preferIpv4>
                <jgroups.preferIpv6>false</jgroups.preferIpv6>
            </properties>
        </profile>
        <profile>
            <id>preferIpv6</id>
            <properties>
                <jgroups.preferIpv4>false</jgroups.preferIpv4>
                <jgroups.preferIpv6>true</jgroups.preferIpv6>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <modules>
                <module>modeshape-integration-tests</module>
                <module>docs</module>
                <module>docs/examples/gettingstarted</module>
            </modules>
        </profile>
        <profile>
            <id>integration</id>
            <modules>
                <module>modeshape-integration-tests</module>
                <module>docs/examples/gettingstarted</module>
            </modules>
        </profile>
        <profile>
            <id>jcr-tck</id>
            <modules>
                <module>modeshape-jcr-tck</module>
            </modules>
        </profile>
        <profile>
            <!--
                This profile is activated when the "generate.docs" property is set,
                as in "mvn ... -Dgenerate.docs=true ..."
            -->
            <id>docs</id>
            <activation>
                <property>
                    <name>generate.docs</name>
                </property>
            </activation>
            <modules>
                <module>docs</module>
                <module>docs/examples/gettingstarted</module>
            </modules>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <aggregate>true</aggregate>
                            <show>public</show>
                            <title>ModeShape ${project.version}</title>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <!--
                This profile is activated manually, as in "mvn ... -P assembly ..."
            -->
            <id>assembly</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!-- Skip running the tests during assembly -->
                <skipTests>true</skipTests>
                <!-- Skip running the tests in any processes forked during assembly -->
                <arguments>-DskipTests=true</arguments>
            </properties>
            <modules>
                <module>modeshape-integration-tests</module>
                <module>docs</module>
                <module>docs/examples/gettingstarted</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>assembly</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <finalName>modeshape-${project.version}</finalName>
                            <descriptors>
                                <descriptor>src/main/assembly/all-with-dependencies.xml</descriptor>
                                <descriptor>src/main/assembly/examples.xml</descriptor>
                                <descriptor>src/main/assembly/javadoc.xml</descriptor>
                                <descriptor>src/main/assembly/javadoc-public-api.xml</descriptor>
                                <descriptor>src/main/assembly/dist.xml</descriptor>
                                <descriptor>src/main/assembly/src.xml</descriptor>
                                <descriptor>src/main/assembly/all.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.6.1</version>
                        <executions>
                            <execution>
                                <id>javadoc-all</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <configuration>
                                    <doclet>org.jboss.apiviz.APIviz</doclet>
                                    <docletArtifact>
                                        <groupId>org.jboss.apiviz</groupId>
                                        <artifactId>apiviz</artifactId>
                                        <version>1.3.0.GA</version>
                                    </docletArtifact>
                                    <attach>false</attach>
                                    <!--
                                        JBoss.org stylesheets (see
                                        http://community.jboss.org/docs/DOC-14764)
                                    -->
                                    <stylesheetfile>${basedir}/src/javadoc/stylesheet.css</stylesheetfile>
                                    <javadocDirectory>${basedir}/src/javadoc</javadocDirectory>
                                    <docfilessubdirs>true</docfilessubdirs>
                                    <!-- end JBoss.org stylesheets -->
                                    <useStandardDocletOptions>true</useStandardDocletOptions>
                                    <outputDirectory>${project.build.directory}/api-full</outputDirectory>
                                    <reportOutputDirectory>${project.build.directory}/api-full</reportOutputDirectory>
                                    <destDir>api-full</destDir>
                                    <charset>UTF-8</charset>
                                    <docencoding>UTF-8</docencoding>
                                    <breakiterator>true</breakiterator>
                                    <version>true</version>
                                    <author>true</author>
                                    <keywords>true</keywords>
                                    <overview>${basedir}/src/javadoc/overview.html</overview>
                                    <doctitle>${project.name} Library Reference
                                        (${project.version})</doctitle>
                                    <windowtitle>${project.name} Library Reference
                                        (${project.version})</windowtitle>
                                    <maxmemory>1024m</maxmemory>
                                    <additionalparam>
                                        -link http://java.sun.com/javase/6/docs/api/
                                        -link
                                        http://java.sun.com/products/servlet/2.5/docs/servlet-2_5-mr2/
                                        -link http://www.slf4j.org/apidocs/
                                        -link http://www.day.com/maven/javax.jcr/javadocs/jcr-2.0/

                                        -group "JCR engine" ${project.groupId}.jcr*
                                        -group "Graph API"
                                        ${project.groupId}.graph:${project.groupId}.graph.io*:${project.groupId}.graph.property*:${project.groupId}.graph.request*:${project.groupId}.graph.session*:${project.groupId}.graph.xml*:${project.groupId}.graph.observe
                                        -group "Query and Search"
                                        ${project.groupId}.graph.query*:${project.groupId}.graph.search*:${project.groupId}.search*
                                        -group "Connector SPI"
                                        ${project.groupId}.graph.cache*:${project.groupId}.graph.connector*
                                        -group "Sequencer SPI" ${project.groupId}.graph.sequencer*
                                        -group "MIME type detector SPI"
                                        ${project.groupId}.graph.mimetype*
                                        -group "Web services" ${project.groupId}.web*
                                        -group "Connectors"
                                        ${project.groupId}.graph.connector.inmemory:${project.groupId}.graph.connector.federation:${project.groupId}.connector*
                                        -group "Sequencers" ${project.groupId}.sequencer*
                                        -group "MIME type detectors" ${project.groupId}.mimetype*
                                        -group "Classloaders" ${project.groupId}.maven*

                                        -nopackagediagram
                              </additionalparam>
                                    <encoding>UTF-8</encoding>
                                    <locale>en_US</locale>
                                    <excludePackageNames>${project.groupId}.test*:org.modeshape.example*</excludePackageNames>
                                </configuration>
                            </execution>
                            <execution>
                                <id>javadoc-api</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <configuration>
                                    <doclet>org.jboss.apiviz.APIviz</doclet>
                                    <docletArtifact>
                                        <groupId>org.jboss.apiviz</groupId>
                                        <artifactId>apiviz</artifactId>
                                        <version>1.3.0.GA</version>
                                    </docletArtifact>
                                    <attach>false</attach>
                                    <!--
                                        JBoss.org stylesheets (see
                                        http://community.jboss.org/docs/DOC-14764)
                                    -->
                                    <stylesheetfile>${basedir}/src/javadoc/stylesheet.css</stylesheetfile>
                                    <javadocDirectory>${basedir}/src/javadoc</javadocDirectory>
                                    <docfilessubdirs>true</docfilessubdirs>
                                    <!-- end JBoss.org stylesheets -->
                                    <useStandardDocletOptions>true</useStandardDocletOptions>
                                    <outputDirectory>${project.build.directory}/api</outputDirectory>
                                    <reportOutputDirectory>${project.build.directory}/api</reportOutputDirectory>
                                    <destDir>api</destDir>
                                    <charset>UTF-8</charset>
                                    <docencoding>UTF-8</docencoding>
                                    <breakiterator>true</breakiterator>
                                    <version>true</version>
                                    <author>true</author>
                                    <keywords>true</keywords>
                                    <overview>${basedir}/src/javadoc/overview.html</overview>
                                    <doctitle>${project.name} Public API Reference
                                        (${project.version})</doctitle>
                                    <windowtitle>${project.name} Public API Reference
                                        (${project.version})</windowtitle>
                                    <maxmemory>1024m</maxmemory>
                                    <additionalparam>
                                        -link http://java.sun.com/javase/6/docs/api/
                                        -link
                                        http://java.sun.com/products/servlet/2.5/docs/servlet-2_5-mr2/
                                        -link http://www.slf4j.org/apidocs/
                                        -link http://www.day.com/maven/javax.jcr/javadocs/jcr-2.0/

                                        -group "JCR engine"
                                        ${project.groupId}.jcr:${project.groupId}.jcr.api*:${project.groupId}.jcr.nodetype
                                        -group "Graph API"
                                        ${project.groupId}.graph:${project.groupId}.graph.io:${project.groupId}.graph.property:${project.groupId}.graph.request*:${project.groupId}.graph.session*:${project.groupId}.graph.xml*:${project.groupId}.graph.observe
                                        -group "Query and Search"
                                        ${project.groupId}.graph.query*:${project.groupId}.graph.search*
                                        -group "Connector SPI"
                                        ${project.groupId}.graph.cache*:${project.groupId}.graph.connector*
                                        -group "Sequencer SPI" ${project.groupId}.graph.sequencer
                                        -group "MIME type detector SPI"
                                        ${project.groupId}.graph.mimetype
                                        -group "RESTful web service client"
                                        ${project.groupId}.web.jcr.rest.client*
                                        -group "Connectors"
                                        ${project.groupId}.graph.connector.inmemory:${project.groupId}.graph.connector.federation:${project.groupId}.connector*
                                        -group "Sequencers" ${project.groupId}.sequencer*
                                        -group "MIME type detectors" ${project.groupId}.mimetype*

                                        -nopackagediagram
                              </additionalparam>
                                    <encoding>UTF-8</encoding>
                                    <locale>en_US</locale>
                                    <excludePackageNames>${project.groupId}.test*:org.modeshape.example*:${project.groupId}.common.math:${project.groupId}.common.statistic:${project.groupId}.web.jcr.rest:${project.groupId}.web.jcr.rest.model:${project.groupId}.web.jcr.rest.spi:${project.groupId}.graph.property.basic:${project.groupId}.jcr.xpath:${project.groupId}.repository.*:${project.groupId}.search.lucene*:${project.groupId}.maven*</excludePackageNames>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>2.1</version>
                        <executions>
                            <execution>
                                <id>generate-xref</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>jxr</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <inputEncoding>UTF-8</inputEncoding>
                            <outputEncoding>UTF-8</outputEncoding>
                            <aggregate>true</aggregate>
                            <linkJavadoc>true</linkJavadoc>
                            <destDir>${project.build.directory}/xref</destDir>
                            <javadocDir>${project.build.directory}/api</javadocDir>
                            <stylesheet>${basedir}/src/xref/stylesheet.css</stylesheet>
                            <docTitle>${project.name} Source Xref (${project.version})</docTitle>
                            <windowTitle>${project.name} Source Xref (${project.version})</windowTitle>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            ###################################################################
            Database profiles to specify which DBMS is used for tests.
            ###################################################################

            To use, specify "-Ddatabase=<dbProfileName>" on the Maven command
            line.
        -->

        <!--
            The default test environment is HSQLDB (may eventually move to H2)
        -->
        <profile>
            <id>default_dbms</id>
            <activation>
                <property>
                    <name>!database</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>1.8.0.2</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>hsqldb</database>
                <jpaSource.dialect>org.hibernate.dialect.HSQLDialect</jpaSource.dialect>
                <jpaSource.driverClassName>org.hsqldb.jdbcDriver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:hsqldb:mem:modeshape</jpaSource.url>
                <jpaSource.username>sa</jpaSource.username>
                <jpaSource.password />
            </properties>
        </profile>

        <!-- The HSQLDB test environment -->
        <profile>
            <id>hsqldb</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>hsqldb</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>1.8.0.2</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>hsqldb</database>
                <jpaSource.dialect>org.hibernate.dialect.HSQLDialect</jpaSource.dialect>
                <jpaSource.driverClassName>org.hsqldb.jdbcDriver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:hsqldb:mem:modeshape</jpaSource.url>
                <jpaSource.username>sa</jpaSource.username>
                <jpaSource.password />
            </properties>
        </profile>

        <!-- The HSQLDB test environment -->
        <profile>
            <id>hsqldb_disk</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>hsqldb_disk</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>1.8.0.2</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>hsqldb</database>
                <jpaSource.dialect>org.hibernate.dialect.HSQLDialect</jpaSource.dialect>
                <jpaSource.driverClassName>org.hsqldb.jdbcDriver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:hsqldb:file:target/hsqldb/modeshape</jpaSource.url>
                <jpaSource.username>sa</jpaSource.username>
                <jpaSource.password />
            </properties>
        </profile>

        <!-- The H2 test environment -->

        <profile>
            <id>h2</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>h2</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>1.2.124</version>
                    <!--version>1.3.148</version-->
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>h2</database>
                <jpaSource.dialect>org.hibernate.dialect.H2Dialect</jpaSource.dialect>
                <jpaSource.driverClassName>org.h2.Driver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:h2:mem:target/test/db/h2/modeshape</jpaSource.url>
                <jpaSource.username>sa</jpaSource.username>
                <jpaSource.password />
            </properties>
        </profile>

        <!-- The PostgreSQL test environment, local to the developer -->
        <profile>
            <id>postgresql_local</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>postgresql_local</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>8.4-701.jdbc3</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <jpaSource.dialect>org.hibernate.dialect.PostgreSQLDialect</jpaSource.dialect>
                <jpaSource.driver>org.postgresql.Driver</jpaSource.driver>
                <jpaSource.url>jdbc:postgresql://localhost/unit_test</jpaSource.url>
                <jpaSource.username>postgres</jpaSource.username>
                <jpaSource.password>data</jpaSource.password>
            </properties>
        </profile>

        <!-- The MySQL5 InnoDB test environment, local to the developer -->
        <profile>
            <id>mysql5_local</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>mysql5_local</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.1.7</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>mysql5</database>
                <jpaSource.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</jpaSource.dialect>
                <jpaSource.driverClassName>com.mysql.jdbc.Driver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:mysql://localhost:3306/test</jpaSource.url>
                <jpaSource.username>unit_test</jpaSource.username>
                <jpaSource.password>unit_test</jpaSource.password>
            </properties>
        </profile>

        <!--
            ###################################################################
            Profiles naming db instances in the Red Hat QA/QE lab First, those
            with OSS drivers
            ###################################################################
        -->

        <!-- The MySQL5 test environment -->
        <profile>
            <id>mysql5</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>mysql5</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.1.7</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>mysql5</database>
                <jpaSource.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</jpaSource.dialect>
                <jpaSource.driverClassName>com.mysql.jdbc.Driver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:mysql://vmg02.mw.lab.eng.bos.redhat.com/modeshape</jpaSource.url>
                <jpaSource.username>modeshape</jpaSource.username>
                <jpaSource.password>modeshape</jpaSource.password>
            </properties>
        </profile>

        <!-- The PostgreSQL test environment -->
        <profile>
            <id>postgresql8</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>postgresql8</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>8.3-604.jdbc3</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>postgresql8</database>
                <jpaSource.dialect>org.hibernate.dialect.PostgreSQLDialect</jpaSource.dialect>
                <jpaSource.driverClassName>org.postgresql.Driver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:postgresql://vmg03.mw.lab.eng.bos.redhat.com:5432:modeshape</jpaSource.url>
                <jpaSource.username>modeshape</jpaSource.username>
                <jpaSource.password>modeshape</jpaSource.password>
            </properties>
        </profile>

        <!--
            ###################################################################
            Then, those with commercial drivers
            ###################################################################
        -->

        <!-- The DB2 9.x test environment (using 9x drivers)-->
        <profile>
            <id>db2v9</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>db2v9</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.ibm</groupId>
                    <artifactId>db2jcc</artifactId>
                    <!--version>3.8.47</version-->
                    <!--version>3.57.86</version-->
                    <version>3.58.82</version>
                </dependency>
                <dependency>
                    <groupId>com.ibm</groupId>
                    <artifactId>db2jcc_license_cu</artifactId>
                    <!--version>3.8.47</version-->
                    <version>3.57.86</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>db2v9</database>
                <jpaSource.dialect>org.hibernate.dialect.DB2Dialect</jpaSource.dialect>
                <jpaSource.driverClassName>com.ibm.db2.jcc.DB2Driver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:db2://vmg06.mw.lab.eng.bos.redhat.com:50000/jbossqa</jpaSource.url>
                <jpaSource.username>dballo02</jpaSource.username>
                <jpaSource.password>dballo02</jpaSource.password>
            </properties>
        </profile>

        <!-- The Oracle10g test environment -->
        <profile>
            <id>oracle10g</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>oracle10g</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.oracle</groupId>
                    <artifactId>ojdbc14</artifactId>
                    <!-- use the 10g drivers which are surprisingly largely bug free -->
                    <version>10.0.2.0</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>oracle10g</database>
                <jpaSource.dialect>org.hibernate.dialect.Oracle10gDialect</jpaSource.dialect>
                <jpaSource.driverClassName>oracle.jdbc.driver.OracleDriver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:oracle:thin:@vmg05.mw.lab.eng.bos.redhat.com:1521:QAORA10</jpaSource.url>
                <jpaSource.username>modeshape</jpaSource.username>
                <jpaSource.password>modeshape</jpaSource.password>
            </properties>
        </profile>

        <!-- The Oracle11g test environment -->
        <profile>
            <id>oracle11g</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>oracle11g</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.oracle</groupId>
                    <artifactId>ojdbc6</artifactId>
                    <version>11.1.0.7.0</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>oracle11g</database>
                <jpaSource.dialect>org.hibernate.dialect.Oracle10gDialect</jpaSource.dialect>
                <jpaSource.driverClassName>oracle.jdbc.driver.OracleDriver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:oracle:thin:@dev04.qa.atl2.redhat.com:1521:qaora11</jpaSource.url>
                <jpaSource.username>modeshape</jpaSource.username>
                <jpaSource.password>modeshape</jpaSource.password>
            </properties>
        </profile>

        <!-- The Sybase 15 test environment -->
        <profile>
            <id>sybase15</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>sybase15</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sybase</groupId>
                    <artifactId>jconnect</artifactId>
                    <version>6.0.5</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>sybase15</database>
                <jpaSource.dialect>org.hibernate.dialect.SybaseDialect</jpaSource.dialect>
                <jpaSource.driverClassName>com.sybase.jdbc3.jdbc.SybDriver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:sybase:Tds:vmg07.mw.lab.eng.bos.redhat.com:5000/modeshape</jpaSource.url>
                <jpaSource.username>modeshape</jpaSource.username>
                <jpaSource.password>modeshape</jpaSource.password>
            </properties>
        </profile>

        <!-- The SQLServer2008 (MS JDBC) test environment -->
        <profile>
            <id>mssql2008</id>
            <activation>
                <property>
                    <name>database</name>
                    <value>mssql2008</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.microsoft.sqlserver</groupId>
                    <artifactId>msjdbc</artifactId>
                    <version>2.0.1008.2</version>
                    <classifier>4</classifier>
                    <!--
                        Must use the JDBC-4 driver on JDK6
                    -->
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <database>mssql2008</database>
                <metadata.collectorClassName>org.modeshape.connector.meta.jdbc.SqlServerMetadataCollector</metadata.collectorClassName>
                <jpaSource.dialect>org.hibernate.dialect.SQLServerDialect</jpaSource.dialect>
                <jpaSource.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</jpaSource.driverClassName>
                <jpaSource.url>jdbc:sqlserver://vmg04.mw.lab.eng.bos.redhat.com</jpaSource.url>
                <jpaSource.username>modeshape</jpaSource.username>
                <jpaSource.password>modeshape</jpaSource.password>
            </properties>
        </profile>

    </profiles>
    <build>
        <!--
            This section defines the default plugin settings inherited by child
            projects.
        -->
        <pluginManagement>
            <plugins>
                <!--
                    Fixes how test resources of a project can be used in projects
                    dependent on it
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <extensions>true</extensions>
                    <version>2.1.0</version>
                    <configuration>
                      <instructions>
                        <Export-Package>org.modeshape.*</Export-Package>
                      </instructions>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Specify the compiler options and settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <!-- Produce source jars during the 'verify' phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*TestCase.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                    <!--
                        excludes> <exclude>**/Abstract*TestCase.java</exclude>
                        <exclude>**/Abstract*Test.java</exclude> </excludes -->
                    <systemProperties>
                        <property>
                            <name>java.io.tmpdir</name>
                            <value>${basedir}/target</value>
                        </property>
                        <property>
                            <name>java.net.preferIPv4Stack</name>
                            <value>${jgroups.preferIpv4}</value>
                        </property>
                        <property>
                            <name>java.net.preferIPv6Stack</name>
                            <value>${jgroups.preferIpv6}</value>
                        </property>
                    </systemProperties>
                    <argLine>-XX:MaxPermSize=1024m</argLine>
                </configuration>
            </plugin>

            <!-- ModeShape-600 Bug - version 2.7 has a bug -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <!--
                Build a test-jar for each project, so that src/test/* resources and
                classes can be used in other projects. Also customize how the jar
                files are assembled.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultSpecificationEntries>
                                true
                            </addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>
                                true
                            </addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-URL>
                                ${project.url}
                            </Implementation-URL>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <!--
        This section defines the default dependency settings inherited by
        child projects. Note that this section does not add dependencies, but
        rather provide default settings.
    -->
    <dependencyManagement>
        <dependencies>
            <!-- ModeShape subprojects -->
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-classloader-maven</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-graph</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-cnd</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-search-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-repository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-tck</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-clustering</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-jbosscache</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-store-jpa</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-filesystem</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-svn</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-mimetype-detector-aperture</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-cnd</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-images</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-java</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-mp3</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-msoffice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-xml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-zip</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-war</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--
               Collections
            -->
            <dependency>
                <groupId>com.google.collections</groupId>
                <artifactId>google-collections</artifactId>
                <version>1.0-rc3</version>
                <scope>compile</scope>
            </dependency>
            <!--
            Time and Date
            -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>1.6</version>
                <scope>compile</scope>
            </dependency>
            <!-- Testing (note the scope) -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.4</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>1.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.8.4</version>
                <scope>test</scope>
            </dependency>
            <!--
                Logging (require SLF4J API for compiling, but use Log4J and its
                SLF4J binding for testing)
            -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.5.11</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.5.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.16</version>
                <scope>test</scope>
            </dependency>
            <!-- Java Concurrency in Practice annotations -->
            <dependency>
                <groupId>net.jcip</groupId>
                <artifactId>com.springsource.net.jcip.annotations</artifactId>
                <version>1.0.0</version>
                <scope>compile</scope>
            </dependency>
            <!-- Java Content Repository API -->
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>2.0</version>
                <scope>compile</scope>
            </dependency>
            <!--
                Apache JCR API unit tests (for any JCR implementation), which is a
                subset of the official TCK
            -->
            <dependency>
                <groupId>org.apache.jackrabbit</groupId>
                <artifactId>jackrabbit-jcr-tests</artifactId>
                <version>2.1.0</version>
                <scope>test</scope>
            </dependency>
            <!-- Databases and JDBC Drivers -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.0.7</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>10.2.1.6</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>1.8.0.2</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.4.3</version>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>http://repository.jboss.org/nexus/content/groups/developer/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>http://repository.jboss.org/nexus/content/groups/developer/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>jboss-releases-repository</id>
            <name>JBoss Releases Repository</name>
            <url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
</project>
