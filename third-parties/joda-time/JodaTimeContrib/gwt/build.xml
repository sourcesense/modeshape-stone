<project name="joda-time-gwt" default="jar" basedir=".">

   <!--
       NOTE: Part of the build is not done via ant but via maven. See README.txt
       for instructions.
    -->

	<property file="build-user.properties" />
	<property file="build.properties" />

	<path id="main.java.compile.classpath">
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
		<pathelement location="${joda-time.jar}" />
	</path>

	<path id="main.gwt.compile.classpath">
		<pathelement location="src/main/gwt" />
		<pathelement location="src/main/gwt-emul" />
		<path refid="main.java.compile.classpath" />
		<pathelement location="${joda-time-sources.jar}" />
	</path>

	<path id="test.java.compile.classpath">
		<path refid="main.java.compile.classpath"></path>
		<pathelement location="target/classes" />
		<pathelement location="${junit.jar}" />
	</path>

	<path id="test.gwt.compile.classpath">
		<pathelement location="src/test/gwt" />
		<path refid="main.gwt.compile.classpath" />
		<path refid="test.java.compile.classpath" />
	</path>

	<path id="test.gwt.run.classpath">
		<path refid="test.gwt.compile.classpath" />
		<pathelement location="target/test-classes" />
	</path>

	<!--
		Default properties
	-->

	<property name="compile.debug" value="true" />
	<property name="compile.debuglevel" value="lines,source" />

	<property name="compile.deprecation" value="false" />

	<property name="compile.optimize" value="true" />

	<property name="gwt.compile.Xmx" value="-Xmx512M" />


	<!--
		Test Execution Defaults
	-->


	<property name="test.failonerror" value="true" />

	<!-- The test runner to execute -->
	<property name="test.runner" value="junit.textui.TestRunner" />
	<property name="gwt.testSet" value="**/Test*.java" />

	<!--
		Executable Targets
	-->

	<target name="clean" description="Clean build and distribution directories">
		<delete dir="target" />
	</target>

    <target name="check-deps" description="quick check to very whether the dependencies are there">
        <available file="${joda-time.jar}" property="joda.time.jar.present"/>
        <fail message="${joda-time.jar} is not available. Please run 'mvn dependency:copy-dependencies' first">
            <condition>
                <not>
                    <isset property="joda.time.jar.present"/>
                </not>
            </condition>
        </fail>
    </target>

	<target name="compile" depends="check-deps" description="Compile java source">
		<mkdir dir="target/classes" />
		<!-- using source/target 1.3 in line with joda-time -->
		<javac srcdir="src/main/gwt" destdir="target/classes" encoding="utf-8"
			source="1.3" target="1.3" nowarn="true" debug="${compile.debug}"
			debuglevel="${compile.debuglevel}" deprecation="${compile.deprecation}"
			optimize="${compile.optimize}">
			<classpath refid="main.java.compile.classpath" />
		</javac>
	</target>

	<target name="compile-test" depends="compile" description="Compile unit test cases">
		<mkdir dir="target/test-classes" />
		<javac srcdir="src/test/gwt" destdir="target/test-classes"
			encoding="utf-8" source="1.5" target="1.5" nowarn="true" debug="${compile.debug}"
			debuglevel="${compile.debuglevel}" deprecation="${compile.deprecation}"
			optimize="${compile.optimize}">
			<classpath refid="test.java.compile.classpath" />
		</javac>
	</target>

	<!--
		This is just to be able to test whether the GWT main sources compile
		OK. In this case this target will report one error: [ERROR] Unable to
		find type 'DummyEntryPoint'
	-->
	<target name="compile-gwt-dummy" depends="compile"
		description="Dummy GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath refid="main.gwt.compile.classpath" />
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="${gwt.compile.Xmx}" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="org.joda.TimeDummy" />
		</java>
	</target>

	<target name="run-gwt-test" depends="compile-test">
		<echo message="Running test.gwtc tests ..." />
		<mkdir dir="target/test-gwt" />
		<mkdir dir="target/test-gwt-tmp" />

		<junit dir="target/test-gwt" fork="yes" printsummary="yes" showoutput="yes"
			failureproperty="junit.failure" tempdir="target/test-gwt-tmp" jvm="${junit.jvm}">
			<jvmarg line="${gwt.test.args}" />
			<classpath refid="test.gwt.run.classpath" />

 			<formatter type="plain" />
			<formatter type="xml" />

			<batchtest fork="yes" todir="target/test-gwt">
				<fileset dir="src/test/gwt">
					<include name="${gwt.testSet}" />
					<!-- this test gives: a script on this page is causing mozilla to run slowly -->
					<exclude name="**/TestParseISO.java" />
					<!-- in web mode these ones also cause mozilla to run slowly -->
					<exclude name="**/TestTimeOfDay_Properties.java" />
					<exclude name="**/TestBuddhistChronology.java" />
					<exclude name="**/TestGJChronology.java" />
					<exclude name="**/TestISOChronology.java" />
					<exclude name="**/TestBuilder.java" />
					<!-- starting with Test but not a test case -->
					<exclude name="**/gj/Test*.java" />
					<exclude name="**/gwt/TestConstants.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="run-gwt-test-report">
		<junitreport todir="target/test-gwt">
			<fileset dir="target/test-gwt">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="target/test-gwt/html" />
		</junitreport>
	</target>
	
	<!--
		======================================================================
	-->

	<target name="jar" depends="compile" description="Create jar">
		<copy todir="target/jar">
			<fileset dir="target/classes"></fileset>
		</copy>
		<unjar src="${joda-time.jar}" dest="target/jar" />
		<unjar src="${joda-time-sources.jar}" dest="target/jar" />
		<copy todir="target/jar">
			<fileset dir="src/main/gwt"></fileset>
			<fileset dir="src/main/gwt-emul"></fileset>
		</copy>
		<jar jarfile="target/${jar.name}" basedir="target/jar">
			<exclude name="**/TimeDummy.gwt.xml" />
		</jar>
	</target>

</project>