<?xml version="1.0" encoding="ISO-8859-1"?>

<document>
 <properties>
  <title>Java date and time API - JSP tags - User Guide</title>
  <author email="newsham@hawaii.rr.com">Jim Newsham</author>
  <author email="scolebourne@users.sourceforge.net">Stephen Colebourne</author>
 </properties>
<body>

<!-- ========================================================================= -->

<section name="Introduction">
<p>
<a href="/index.html">Joda-Time</a> JSP tags provide a JSTL-like set of tags to format and parse
Joda-Time based date and time objects.
</p>
<p>
The JSTL fmt tags work with java.util.Date and java.util.TimeZone objects.
The tags in this library work with Joda-Time DateTime, ReadableInstant,
ReadablePartial, and DateTimeZone objects.
Otherwise, the two libraries are very similar, thus you can refer to standard
JSTL books and documentation to supplement this document.
</p>

<!-- ========================================================================= -->

<subsection name="Setup">
<p>
You will need a servlet container which supports Servlet 2.4, JSP 2.0, JSTL 1.1.
One such container is <a href="http://tomcat.apache.org">Tomcat 5</a>.
</p>
<p>
The simplest setup is to copy the joda-time-1.2.jar and joda-time-jsptags-1.0.2.jar
to the WEB-INF/lib directory of your web application.
</p>
<p>
You then need to declare the library as follows at the top of your jsp pages:
<source>
&lt;%@taglib prefix="joda" uri="http://www.joda.org/joda/time/tags" %&gt;
</source>
</p>
<p>
In addition to these steps you should ensure that your application is using
servlet specification 2.4. This is usually controlled by the web.xml file.
If you do not do this then EL expressions will not work as expected.
</p>
</subsection>
</section>

<!-- ========================================================================= -->

<section name="Format tag">
<p>
This tag formats ReadableInstant (including DateTime) and ReadablePartial
(including LocalDateTime, LocalDate and LocalTime) objects.
The time zone may be specified using an attribute, an enclosing &lt;joda:dateTimeZone/&gt; tag,
preceding &lt;joda:timeZone/&gt; tag, or via the "org.joda.time.dateTimeZone" scoped variable.
</p>
<p>
The tag may be used in one of two ways.
The simplest way is to output directly to the HTTP response.
The second way is to set the var and scope attributes and set the value of a variable.
</p>
<p>
Example: 
<source>
  &lt;% pageContext.setAttribute("now", new org.joda.time.DateTime()); %&gt;
  &lt;joda:format value="${now}" style="SM" /&gt;
</source>
</p>
<p>
<table>
<tr>
 <th colspan="2">Attributes</th>
</tr>
<tr>
 <td>value (required)</td>
 <td>Must be a ReadableInstant or ReadablePartial</td>
</tr>
<tr>
 <td>var</td>
 <td>The scoped variable to set</td>
</tr>
<tr>
 <td>scope</td>
 <td>The scope of the variable to set</td>
</tr>
<tr>
 <td>locale</td>
 <td>The locale to use for formatting</td>
</tr>
<tr>
 <td>style</td>
 <td>The style to use for formatting (two characters, one for date, one for time, from S=Short, M=Medium, L=Long, F=Full, -=None)</td>
</tr>
<tr>
 <td>pattern</td>
 <td>The pattern to use for formatting (see Joda format documentation for recognized pattern strings)</td>
</tr>
<tr>
 <td>dateTimeZone</td>
 <td>The time zone to use for formatting</td>
</tr>
</table>
</p>
</section>

<!-- ========================================================================= -->

<section name="ParseDateTime tag">
<p>
This tag parses a String into a DateTime object.
The time zone may be specified using an attribute, an enclosing &lt;joda:dateTimeZone/&gt; tag,
preceding &lt;joda:timeZone/&gt; tag, or via the "org.joda.time.dateTimeZone" scoped variable.
</p>
<p>
The tag may be used in one of two ways.
The simplest way is to parse the input and then directly format the output to the HTTP response.
The second way, and more usual way, is to set the var and scope attributes and
set the value of a variable with the results of the parse.
</p>
<p>
Example: 
<source>
  &lt;joda:parseDateTime var="parsed" pattern="yy/M/d" value="05/11/19" /&gt;
  &lt;joda:format value="${parsed}" style="L-" /&gt;
</source>
</p>
<p>
<table>
<tr>
 <th colspan="2">Attributes</th>
</tr>
<tr>
 <td>value (required; unless value is nested within tag)</td>
 <td>Must be a string which can be parsed into a DateTime according to the parsing options specified</td>
</tr>
<tr>
 <td>var</td>
 <td>The scoped variable to set</td>
</tr>
<tr>
 <td>scope</td>
 <td>The scope of the variable to set</td>
</tr>
<tr>
 <td>locale</td>
 <td>The locale to use for parsing</td>
</tr>
<tr>
 <td>style</td>
 <td>The style to use for parsing (two characters, one for date, one for time, from S=Short, M=Medium, L=Long, F=Full, -=None)</td>
</tr>
<tr>
 <td>pattern</td>
 <td>The pattern to use for parsing (see Joda format documentation for recognized pattern strings)</td>
</tr>
<tr>
 <td>dateTimeZone</td>
 <td>The time zone to use for parsing</td>
</tr>
</table>
</p>
</section>

<!-- ========================================================================= -->

<section name="DateTimeZone tag">
<p>
This tag sets the default time zone to use for all nested tags.
The &lt;joda:format /&gt; tag may override this value with an explicit dateTimeZone attribute.
</p>
<p>
Example: 
<source>
  &lt;% pageContext.setAttribute("now", new DateTime()); %&gt;
  &lt;% pageContext.setAttribute("bkk", DateTimeZone.forID("Asia/Bangkok")); %&gt;
  &lt;joda:dateTimeZone value="${bkk}"&gt;
    &lt;joda:format value="${datetime}" /&gt;
  &lt;/joda:dateTimeZone&gt;
</source>
</p>
<p>
<table>
<tr>
 <th colspan="2">Attributes</th>
</tr>
<tr>
 <td>value (required)</td>
 <td>Must be a DateTimeZone object, or an id of a zone</td>
</tr>
</table>
</p>
</section>

<!-- ========================================================================= -->

<section name="SetDateTimeZone tag">
<p>
This tag sets the default time zone, either for the remainder of the page, or to a variable.
If var is not specified, the zone will be stored in a scoped variable called "org.joda.time.dateTimeZone".
This acts as a default for all the other tags.
It will be overridden by a &lt;joda:datetimezone /&gt; tag, or by
an explicit dateTimeZone attribute on &lt;joda:format /&gt;.
</p>
<p>
Example: 
<source>
  &lt;% pageContext.setAttribute("now", new DateTime()); %&gt;
  &lt;% pageContext.setAttribute("bkk", DateTimeZone.forID("Asia/Bangkok")); %&gt;
  &lt;joda:dateTimeZone value="${bkk}" /&gt;
  &lt;joda:format value="${datetime}" /&gt;
</source>
</p>
<p>
<table>
<tr>
 <th colspan="2">Attributes</th>
</tr>
<tr>
 <td>value (required)</td>
 <td>Must be a DateTimeZone object, or an id of a zone</td>
</tr>
<tr>
 <td>var</td>
 <td>The scoped variable to set</td>
</tr>
<tr>
 <td>scope</td>
 <td>The scope of the variable to set</td>
</tr>
</table>
</p>
</section>

<!-- ========================================================================= -->

</body>
</document>
