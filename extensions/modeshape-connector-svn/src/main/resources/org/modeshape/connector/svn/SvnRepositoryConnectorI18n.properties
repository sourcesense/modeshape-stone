#
# ModeShape (http://www.modeshape.org)
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# See the AUTHORS.txt file in the distribution for a full listing of 
# individual contributors. 
#
# ModeShape is free software. Unless otherwise indicated, all code in ModeShape
# is licensed to you under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# ModeShape is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#

connectorName = SVN Connector
nodeDoesNotExist = This node kind is missing at {0}
nodeAlreadyExist = This node {0} already exist.
nodeIsActuallyUnknow =  This node kind is actually unknown {0}
propertyIsRequired = The {0} property is required but has no value
errorSerializingCachePolicyInSource = Error serializing a {0} instance owned by the {1} SVNRepositorySource
sourceIsReadOnly = {0} is a read-only source; no updates are allowed
sourceDoesNotSupportCreatingWorkspaces = {0} is a source that does not allow creating workspaces
sourceDoesNotSupportCloningWorkspaces = {0} is a source that does not allow cloning workspaces
sourceDoesNotSupportDeletingWorkspaces = {0} is a source that does not allow deleting workspaces
connectingFailureOrUserAuthenticationProblem=failure occured while connecting to the repository {0} or the user's authentication failed
workspaceDoesNotExist = The workspace "{0}" does not exist
pathForDefaultWorkspaceDoesNotExist = The path "{0}" for the default workspace for the file system source "{1}" does not represent an existing directory
pathForDefaultWorkspaceIsNotDirectory = The path "{0}" for the default workspace for the file system source "{1}" is actually a path to an existing file
pathForDefaultWorkspaceCannotBeRead = The path "{0}" for the default workspace for the file system source "{1}" cannot be read
pathForPredefinedWorkspaceDoesNotExist = The path "{0}" for the predefined workspace for the file system source "{1}" does not represent an existing directory
pathForPredefinedWorkspaceIsNotDirectory = The path "{0}" for the predefined workspace for the file system source "{1}" is actually a path to an existing file
pathForPredefinedWorkspaceCannotBeRead = The path "{0}" for the predefined workspace for the file system source "{1}" cannot be read
sameNameSiblingsAreNotAllowed = The SVN Connector does not support sibling nodes with the same name (e.g., same name siblings)
onlyTheDefaultNamespaceIsAllowed = {0} requires node names use the default namespace: {1}
locationInRequestMustHavePath = {0} requires a path in the request: {1}
unableToCreateWorkspaces = {0} does not allow creating new workspaces (request was to create "{1}")
pathForRequestIsNotCorrect = The path "{0}" for the request is not correct.
pathForRequestMustStartWithAForwardSlash = The path "{0}" for the request must start with a forward slash.
unsupportedPrimaryType = Primary type "{3}" for path "{0}" in workspace "{1}" in {2} is not valid for the file system connector.  Valid primary types are nt\:file, nt\:folder, nt\:resource, and dna\:resouce. 
invalidPropertyNames = Attempt to set or update invalid property names: {0}
invalidNameForResource = Invalid node name "{3}" for node at path "{0}" in workspace "{1}" in {2}. The name of nodes with primary type nt:resource or dna:resource must be "jcr:content".
invalidPathForResource = Invalid parent type for node at path "{0}" in workspace "{1}" in {2}. The parent node for nodes with primary type nt:resource or dna:resource must be of type nt:file.
missingRequiredProperty = Missing required property "{3}" at path "{0}" in workspace "{1}" in {2} 
nodeOrderingNotSupported = {0} does not support node ordering

repositoryRootUrlPropertyDescription = The URL of the Subversion repository.
repositoryRootUrlPropertyLabel = SVN URL
repositoryRootUrlPropertyCategory = 
usernamePropertyDescription = The username that should be used to establish a connection to the repository. May be blank or null.
usernamePropertyLabel = Username
usernamePropertyCategory = 
passwordPropertyDescription = The password that should be used to establish a connection to the repository. May be blank or null.
passwordPropertyLabel = Password
passwordPropertyCategory = 
creatingWorkspacesAllowedPropertyDescription = Optional property that defines whether clients can create new workspaces. The default value is "true".
creatingWorkspacesAllowedPropertyLabel = Creating Workspaces Allowed
creatingWorkspacesAllowedPropertyCategory = Workspaces
defaultWorkspaceNamePropertyDescription = Optional property that specifies the name of the workspace to use when no workspace name is specified in an operation. Each workspace name is treated as a path relative to the SVN repository being exposed (e.g., a workspace name of "trunk" will map to the URL "http://acme.com/repo/trunk" if the repository root URL is "http://acme.com/repo/"). The default value is "trunk".
defaultWorkspaceNamePropertyLabel = Default Workspace Name
defaultWorkspaceNamePropertyCategory = Workspaces
predefinedWorkspaceNamesPropertyDescription = Optional property that defines names of the workspaces that are predefined and need not be created before being used. Each workspace name is treated as a path relative to the SVN repository being exposed (e.g., a workspace name of "trunk" will map to the URL "http://acme.com/repo/trunk" if the repository root URL is "http://acme.com/repo/"). This can be coupled with a "false" value for the "Creating Workspaces Allowed" property to allow only the use of predefined workspaces.
predefinedWorkspaceNamesPropertyLabel = Predefined Workspace Names
predefinedWorkspaceNamesPropertyCategory = Workspaces
updatesAllowedPropertyDescription = Specifies whether the source content can be updated or changed.
updatesAllowedPropertyLabel = Allows Updates
updatesAllowedPropertyCategory = Advanced


# Writable tests
couldNotCreateFile =Error reading data at path "{0}" in workspace "{1}" in source "{2}": "{3}"
couldNotReadData= Error reading data in workspace "{1}" "{0}" "{2}" "{3}"
deleteFailed=Error deleting path {0} in workspace with source name {1}
